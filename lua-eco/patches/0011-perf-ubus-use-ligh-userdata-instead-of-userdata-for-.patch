From ace29432dae3bd691d4e2dba7c2c499e9d6695c2 Mon Sep 17 00:00:00 2001
From: Jianhui Zhao <zhaojh329@gmail.com>
Date: Fri, 12 Apr 2024 14:59:26 +0800
Subject: [PATCH 2/3] perf(ubus): use ligh userdata instead of userdata for
 alloc defered request.

Signed-off-by: Jianhui Zhao <zhaojh329@gmail.com>
---
 ubus.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/ubus.c b/ubus.c
index 54d4216..4d872d3 100644
--- a/ubus.c
+++ b/ubus.c
@@ -459,10 +459,14 @@ static int ubus_method_handler(struct ubus_context *ctx, struct ubus_object *obj
 {
     struct eco_ubus_context *c = container_of(ctx, struct eco_ubus_context, ctx);
     struct eco_ubus_object *o = container_of(obj, struct eco_ubus_object, object);
-    struct ubus_request_data *new_req;
+    struct ubus_request_data *dreq;
     lua_State *L = c->eco->L;
     int rv = 0;
 
+    dreq = malloc(sizeof(struct ubus_request_data));
+    if (!dreq)
+        luaL_error(L, "no mem");
+
     lua_settop(L, 0);
 
     lua_pushnil(L);
@@ -479,8 +483,9 @@ static int ubus_method_handler(struct ubus_context *ctx, struct ubus_object *obj
     lua_replace(L, -6);
     lua_settop(L, -5);
 
-    new_req = lua_newuserdata(L, sizeof(struct ubus_request_data));
-    ubus_defer_request(ctx, req, new_req);
+    ubus_defer_request(ctx, req, dreq);
+
+    lua_pushlightuserdata(L, dreq);
 
     blob_to_lua_table(L, blob_data(msg), blob_len(msg), false);
 
@@ -655,6 +660,7 @@ static int lua_ubus_complete_deferred_request(lua_State *L)
     int ret = luaL_checkinteger(L, 3);
 
     ubus_complete_deferred_request(&ctx->ctx, req, ret);
+    free(req);
 
     return 0;
 }
-- 
2.34.1

