Index: libiwinfo-2021-04-30-c45f0b58/include/iwinfo/utils.h
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/include/iwinfo/utils.h
+++ libiwinfo-2021-04-30-c45f0b58/include/iwinfo/utils.h
@@ -43,6 +43,8 @@ static inline int iwinfo_mbm2dbm(int gai
 	return gain / 100;
 }
 
+const char * const iwinfo_htmode_name(int mask);
+
 int iwinfo_ifup(const char *ifname);
 int iwinfo_ifdown(const char *ifname);
 int iwinfo_ifmac(const char *ifname);
Index: libiwinfo-2021-04-30-c45f0b58/iwinfo_cli.c
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/iwinfo_cli.c
+++ libiwinfo-2021-04-30-c45f0b58/iwinfo_cli.c
@@ -567,6 +567,20 @@ static char * print_hwmodes(const struct
 	return format_hwmodes(modes);
 }
 
+static const char *print_htmode(const struct iwinfo_ops *iw, const char *ifname)
+{
+	int mode;
+	const char *name;
+	if (iw->htmode(ifname, &mode))
+		mode = -1;
+
+	name = iwinfo_htmode_name(mode);
+	if (name)
+		return name;
+
+	return "unknown";
+}
+
 static char * print_mbssid_supp(const struct iwinfo_ops *iw, const char *ifname)
 {
 	int supp;
@@ -598,10 +612,11 @@ static void print_info(const struct iwin
 		print_ssid(iw, ifname));
 	printf("          Access Point: %s\n",
 		print_bssid(iw, ifname));
-	printf("          Mode: %s  Channel: %s (%s)\n",
+	printf("          Mode: %s  Channel: %s (%s) HT Mode: %s\n",
 		print_mode(iw, ifname),
 		print_channel(iw, ifname),
-		print_frequency(iw, ifname));
+		print_frequency(iw, ifname),
+		print_htmode(iw, ifname));
 	if (iw->center_chan1 != NULL) {
 		printf("          Center Channel 1: %s",
 			print_center_chan1(iw, ifname));
Index: libiwinfo-2021-04-30-c45f0b58/iwinfo_lua.c
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/iwinfo_lua.c
+++ libiwinfo-2021-04-30-c45f0b58/iwinfo_lua.c
@@ -257,6 +257,21 @@ static int iwinfo_L_mode(lua_State *L, i
 	return 1;
 }
 
+static int iwinfo_L_htmode(lua_State *L, int (*func)(const char *, int *))
+{
+	int mode;
+	const char *ifname = luaL_checkstring(L, 1);
+
+	if ((*func)(ifname, &mode)) {
+		lua_pushnil(L);
+	} else {
+		const char *htmode = iwinfo_htmode_name(mode);
+		lua_pushstring(L, htmode ? htmode : "unknown");
+	}
+
+	return 1;
+}
+
 static void set_rateinfo(lua_State *L, struct iwinfo_rate_entry *r, bool rx)
 {
 	lua_pushnumber(L, r->rate);
@@ -757,6 +772,7 @@ LUA_WRAP_STRING_OP(nl80211,country)
 LUA_WRAP_STRING_OP(nl80211,hardware_name)
 LUA_WRAP_STRING_OP(nl80211,phyname)
 LUA_WRAP_STRUCT_OP(nl80211,mode)
+LUA_WRAP_STRUCT_OP(nl80211,htmode)
 LUA_WRAP_STRUCT_OP(nl80211,assoclist)
 LUA_WRAP_STRUCT_OP(nl80211,txpwrlist)
 LUA_WRAP_STRUCT_OP(nl80211,scanlist)
@@ -877,6 +893,7 @@ static const luaL_reg R_nl80211[] = {
 	LUA_REG(nl80211,quality),
 	LUA_REG(nl80211,quality_max),
 	LUA_REG(nl80211,mode),
+	LUA_REG(nl80211,htmode),
 	LUA_REG(nl80211,ssid),
 	LUA_REG(nl80211,bssid),
 	LUA_REG(nl80211,country),
Index: libiwinfo-2021-04-30-c45f0b58/iwinfo_utils.c
===================================================================
--- libiwinfo-2021-04-30-c45f0b58.orig/iwinfo_utils.c
+++ libiwinfo-2021-04-30-c45f0b58/iwinfo_utils.c
@@ -77,6 +77,39 @@ int iwinfo_mw2dbm(int in)
 	return (int)res;
 }
 
+static int iwinfo_bit(int value, int max)
+{
+	int i;
+
+	if (max > 31 || !(value & ((1 << max) - 1)))
+		return -1;
+
+	for (i = 0; i < max; i++)
+	{
+		if (value & 1)
+			break;
+
+		value >>= 1;
+	}
+
+	return i;
+}
+
+static const char * const iwinfo_name(int mask, int max, const char * const names[])
+{
+	int index = iwinfo_bit(mask, max);
+
+	if (index < 0)
+		return NULL;
+
+	return names[index];
+}
+
+const char * const iwinfo_htmode_name(int mask)
+{
+	return iwinfo_name(mask, IWINFO_HTMODE_COUNT, IWINFO_HTMODE_NAMES);
+}
+
 int iwinfo_ifup(const char *ifname)
 {
 	struct ifreq ifr;
